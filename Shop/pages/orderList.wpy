
<style lang="less">
</style>
<template>
  <view class="container">
    <statusTap :statusType="statusType" @statusTap.user="statusTap" :currentType.sync="currentType"></statusTap>
    <noorder show="2" wx:if="{{orderList.length==0}}" text="暂无订单"></noorder>
    <repeat for="{{orderList}}" wx:key="{{index}}">
      <orderList
        :orderList.sync="item"
        :goodsMap.sync="goodsMap[index]"
        @orderDetail.user="orderDetail"
      > 
       
      </orderList>
    </repeat>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '../../API/api';
import statusTap from '../../components/statusTap';
import noorder from '../../components/noOrder';
import orderList from '../../components/shop/orderList';

export default class orderlist extends wepy.page {
  config = {
    navigationBarTitleText: '订单列表'
  };
  components = { statusTap, noorder, orderList };

  data = {
    statusType: ['全部', '待付款', '待发货', '待收货', '已完成'],
    orderList: [],
    goodsMap: [],
    currentType: '0'
  };

  computed = {};
  methods = {
    // 选择
    statusTap(index) {
      wx.showLoading({
        title: '加载中', //提示的内容,
        mask: true //显示透明蒙层，防止触摸穿透,
      });
      this.thisindex = index;
      this.getOrderList(this.userId, index);
    },
    // 取消订单
    cancelOrderTap(id) {
      var that = this;
      wx.showModal({
        title: '提示', //提示的标题,
        content: '你确定要取消订单吗', //提示的内容,
        showCancel: true, //是否显示取消按钮,
        cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
        cancelColor: '#000000', //取消按钮的文字颜色,
        confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
        confirmColor: '#e50012', //确定按钮的文字颜色,
        success: res => {
          if (res.confirm) {
            that.toCancelOrder(id);
          } else if (res.cancel) {
          }
        }
      });
    },
    // 确认收货
    confirmBtnTap(id) {
      var that = this;
      wx.showModal({
        title: '提示', //提示的标题,
        content: '你确定收货吗', //提示的内容,
        showCancel: true, //是否显示取消按钮,
        cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
        cancelColor: '#000000', //取消按钮的文字颜色,
        confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
        confirmColor: '#e50012', //确定按钮的文字颜色,
        success: res => {
          if (res.confirm) {
            that.toConfirmBtn(id);
          } else if (res.cancel) {
          }
        }
      });
    },
    // 订单详情
    orderDetail(id,evt) {
      console.log('orderDetail?id=' + id)
      wx.navigateTo({
        url: 'orderDetail?id=' + id
      });
    }
  };
  // 取消订单
  toCancelOrder(id) {
    wepy
      .request({
        url: api.cancelOrder, //开发者服务器接口地址",
        data: { id } //请求的参数",
      })
      .then(res => {
        console.log('取消订单', res);
        this.getOrderList(this.userId, this.thisindex);
      });
  }
  // 确认收货
  toConfirmBtn(id) {
    wepy
      .request({
        url: api.confirmOrder, //开发者服务器接口地址",
        data: { id } //请求的参数",
      })
      .then(res => {
        console.log('确认收货', res);
        this.getOrderList(this.userId, this.thisindex);
      });
  }
  events = {};
  async getOrderList(user_id, order_status = '0') {
    wepy
      .request({
        url: api.orderList,
        data: {
          user_id,
          order_status
        }
      })
      .then(res => {
        wx.hideLoading();
        this.orderList = res.data.data.orderList;
        this.goodsMap = res.data.data.goodsMap;
        this.$apply();
        // console.log('订单列表', this.orderList);
      });
  }
  async onLoad(option) {
    wx.showLoading({
      title: '加载中', //提示的内容,
      mask: true //显示透明蒙层，防止触摸穿透,
    });
    let userId = await this.$parent.loginInfo();
    this.userId = userId;
    this.currentType = option.order_status;
    console.log('option.order_status', option.order_status);
    this.getOrderList(userId, option.order_status);
  }
}
</script>
 