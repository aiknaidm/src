
<style lang="less">
</style>
<template>
  <view class="container">
    <statusTap :statusType="statusType" @statusTap.user="statusTap" :currentType.sync="currentType"></statusTap>
    <noorder show="2" wx:if="{{orderList.length==0}}" text="暂无订单"></noorder>
    <!-- 订单列表  -->
    <repeat for="{{orderList}}" wx:key="{{index}}">
      <orderList
        :orderList.sync="item"
        :goodsMap.sync="goodsMap[index]"
        @orderDetail.user="orderDetail"
      >
        <view slot="btn">
          <orderbutton :orderDetail.sync="item"></orderbutton>
        </view>
      </orderList>
    </repeat>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '../../API/api';
import statusTap from '../../components/statusTap';
import noorder from '../../components/noOrder';
import orderList from '../../components/shop/orderList';
import orderbutton from '../../components/shop/orderbutton';
import util from '../../utils/index';
export default class orderlist extends wepy.page {
  config = {
    navigationBarTitleText: '订单列表'
  };
  components = { statusTap, noorder, orderList, orderbutton };

  data = {
    statusType: ['全部', '待付款', '待发货', '待收货', '已完成'],
    orderList: [],
    goodsMap: [],
    currentType: '0'
  };

  computed = {};
  events = {
    // 取消订单
    cancelOrderTap: res => {
      this.getOrderList(this.userId, this.thisindex);
    },
    // 确认订单
    confirmBtnTap: res => {
      this.getOrderList(this.userId, this.thisindex);
    }
  };
  methods = {
    // 选择
    statusTap(index) {
      wx.showLoading({
        title: '加载中', //提示的内容,
        mask: true //显示透明蒙层，防止触摸穿透,
      });
      this.thisindex = index;
      this.getOrderList(this.userId, index);
    },
    // 订单详情
    orderDetail(id, evt) {
      console.log('orderDetail?id=' + id);
      wx.navigateTo({
        url: 'orderDetail?id=' + id
      });
    }
  };
  //  订单列表
  async getOrderList(user_id, order_status = '0') {
    wepy
      .request({
        url: api.orderList,
        data: {
          user_id,
          order_status
        }
      })
      .then(res => {
        wx.hideLoading();
        this.orderList = res.data.data.orderList;
        this.orderList.forEach((item, index) => {
          this.orderList[index].add_time = util.formatTime(
            new Date(item.add_time * 1000),
            'yyyy-MM-dd' 
          );
        });

        this.goodsMap = res.data.data.goodsMap;

        this.$apply();
        // console.log('订单列表', this.orderList);
      });
  }
  async onLoad(option) {
    wx.showLoading({
      title: '加载中', //提示的内容,
      mask: true //显示透明蒙层，防止触摸穿透,
    });
    let userId = await this.$parent.loginInfo();
    this.userId = userId;
    this.currentType = option.order_status;
    this.thisindex = option.order_status;
    console.log('option.order_status', option.order_status);
    this.getOrderList(userId, option.order_status);
  }
}
</script>
 