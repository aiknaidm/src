<style lang="less">


.wxParse-img {
  margin: 0 auto;
  width: 100%;
  min-height: ~'200rpx';
  display: block;
  background-color: transparent;
}
/* page/lmbg/bgxyxq/bgxyxq.wxss */
.body {
  height: 100%;
  background-color: #fff;
  padding: 20px;
  color: #333;
}
.h1 {
  display: inline-block;
  width: 100%;
  text-align: center;
  font-size: 40rpx;
}
.date {
  color: #888;
  border-bottom: 1px solid #c4c4c4;
  display: inline-block;
  width: 100%;
  padding-bottom: 10rpx;
  padding-top: 20rpx;
  text-align: center;
  font-size: 26rpx;
  line-height: 58rpx;
}
.content {
  font-size: 30rpx;
  padding-top: 20rpx;
  display: block;
  line-height: 50rpx;
}
.content .p1 {
  text-indent: 60rpx;
  margin-top: 20rpx;
}
</style>

<template>
  <view class="body">
    <text class="h1" wx:if="{{parserContent.post_title}}">{{parserContent.post_title}}</text>
    <text class="date" wx:if="{{parserContent.published_time}}">{{parserContent.published_time}}</text>
    <rich-text type="node" nodes="{{parserContent.post_content}}" class="content"></rich-text>
  </view>
</template>

<script>
import wepy from 'wepy';

export default class HTMLParser extends wepy.component {
  props = {
    parserName: {
      type: String,
      default: 'htmlParserName'
    },
    parserNameArray: {
      type: Array,
      default: []
    },
    parserContent: {
      type: Object,
      default: {
        post_content:
          "<p style='font-size: 32rpx; padding: 30rpx 0; text-align: center;'>没有任何内容</p>"
      },
      twoWay: true
    },
    parserType: {
      type: String,
      default: 'html'
    },
    parserPadding: {
      type: Number,
      default: 0
    }
  };

  data = {};

  events = {
    'htmlParser-broadcast': ($event, ...args) => {}
  };

  methods = {
    htmlParserNotice() {
      this.htmlParse();
    }
  };

  async onLoad() {
    this.htmlParse();
  }

  wxParseImgLoad(image) {
    let imgInfo = image.detail;
  }

  htmlParse() {
    /**
     * WxParse.wxParse(bindName , type, data, target,imagePadding)
     * 1.bindName绑定的数据名(必填)
     * 2.type可以为html或者md(必填)
     * 3.data为传入的具体数据(必填)
     * 4.target为Page对象,一般为this(必填)
     * 5.imagePadding为当图片自适应是左右的单一padding(默认为0,可选)
     */
    //       try {
    //         console.log( this.parserContent);
    //         let htmlContent = WxParse.wxParse(this.parserName, this.parserType, this.parserContent || this.props.parserContent.default, this, this.parserPadding)
    // //        this.htmlParserTpl = this[this.parserName];
    //         this.htmlParserTpl = htmlContent[this.parserName]
    //         console.log(this.htmlParserTpl.nodes)
    //         this.$apply()
    //       } catch (e) {
    //         console.warn('kinerHtmlParser:', '没有任何内容需要转换', e)
    //       }
  }

  wxParseImgTap(e) {
    WxParse.wxParseImgTap(e, this.bindData);
  }
}
</script>
