
<style>
/* 订单按钮 */
</style>
<template>
  <view class="price-box">
    <view class="btn cancel-btn" wx:if="{{orderDetail.order_status==1||orderDetail.order_status==9}}" @tap.stop="cancelOrderTap({{orderDetail.id}})">取消订单</view>
    <view class="btn topay-btn" wx:if="{{orderDetail.order_status==1}}" @tap.stop="toPayTap({{orderDetail.id}},{{orderDetail.order_amount}},{{index}})">马上付款</view>
    <view class="btn topay-btn" wx:if="{{orderDetail.order_status==2&&orderDetail.shipping_status==1}}" @tap.stop="confirmBtnTap({{orderDetail.id}})">确认收货</view>
    <view class="btn topay-btn" wx:if="{{orderDetail.order_status==9&&is_friend==1}}" @tap.stop="payStatusTap({{orderDetail.id}})">付款</view>
  </view>
</template>
<script>
import wepy from 'wepy';
import newapi from '../../API/newapi';
import util from '../../utils/index';
export default class orderbutton extends wepy.component {
  props = {
    orderDetail: {
      type: Object,
      default: {},
      twoWay: true
    },
    is_friend: String
  };
  data = {};
  events = {};
  methods = {
    // 选择支付方式
    payStatusTap(id) {
      this.$emit('payStatusTap', id);
    },
    // 取消订单
    async cancelOrderTap(id) {
      var that = this;
      let mRes = await util.showModalBig('你确定要取消订单吗');
      if (mRes.confirm) {
        var res = await this.toCancelOrder(id);
        if (res.data.code == 0) this.$emit('cancelOrderTap');
        else util.showToast('取消失败');
      } else if (mRes.cancel) {
      }
    },
    // 确认收货
    async confirmBtnTap(id) {
      var that = this;
      let mRes = await util.showModalBig('你确定收货吗');
      if (mRes.confirm) {
        var res = await this.toConfirmBtn(id);
        if (res.data.code == 0) this.$emit('confirmBtnTap');
        else util.showToast('确认收货失败');
      } else if (mRes.cancel) {
      }
    },
    // 马上付款
    async toPayTap(id) {
      if (this.orderDetail.pay_id == 4) {
        var res = await this.cardPay(id);
        if (res.data.code == 0) util.showToast('支付成功');
        else if (res.data.code == 1) {
          let mRes = await util.showModalBig(res.data.message);
          if (mRes.confirm) {
            wx.navigateTo({
              url: 'cardPay?suppliers_id=' + this.orderDetail.suppliers_id
            });
          } else if (mRes.cancel) {
          }
        }
      } else {
        util.showLoading('支付中...');
        var res = await util.wxpay1(
          id,
          '/Shop/pages/orderList?order_status=2',
          '/Shop/pages/orderList?order_status=1'
        );
        wx.hideLoading();
        util.showToast(res.msg);
      }
    }
  };
  // 取消订单
  async toCancelOrder(id) {
    let data = { id };
    return await newapi.cancelOrder(data);
  }
  // 确认收货
  async toConfirmBtn(id) {
    let data = { id };
    return await newapi.confirmOrder(data);
  }
  toPayTap() {
    this.$emit('toPayTap');
  }
  // 会员卡支付
  async cardPay(id) {
    let data = { id };
    return await newapi.cardpay(data);
    return res;
  }
  async onLoad() {}
}
</script>
