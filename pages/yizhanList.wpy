<style lang="less">
/*选择分类  */
.list {
  background-color: #fff;
  width: 60%;
  text-align: center;
  line-height: 88rpx;
  font-size: 30rpx;
  max-height: 450rpx;
  overflow: scroll;
}
.list view {
  border-bottom: 1px solid #f0f0f0;
}
.backIndex,
.backIndex3 {
  // padding: 10rpx 60rpx 10rpx 30rpx;
  background: rgba(0, 0, 0, 0.5);
  position: fixed;
  right: 0rpx;
  bottom: 200rpx;
  color: #fff;
  border-radius: 50px;
  font-size: 30rpx;
  display: flex;
  transition: all 1s;
  -webkit-transition: all 1s;
  align-items: center;
  width: 80rpx;
  height: 80rpx;
  text-align: center;
  justify-content: center; // overflow: hidden;
}
</style>
<template>
  <view class="container">
    <noorder show="1" wx:if="{{orderList.length==0&&otherList.length==0}}"></noorder>
    <repeat for="{{orderList}}" wx:key="{{index}}">
      <orderList :orderList.sync="item" :goodsMap.sync="goodsMap[index]" @orderDetail.user="orderDetail">
        <view slot="btn">
          <view class="price-box">
            <view class="btn topay-btn" @tap="toOrderAgain({{item.suppliers_id}},{{item.id}},{{index}},0)">再来一单</view>
          </view>
        </view>
      </orderList>
    </repeat>
    <repeat if="{{orderList.length==0}}" for="{{otherList}}" wx:key="{{index}}">
      <orderList :orderList.sync="item" :goodsMap.sync="otherMap[index]" @orderDetail.user="orderDetail">
        <view slot="btn">
          <view class="price-box">
            <view class="btn topay-btn" @tap="toOrderAgain({{item.suppliers_id}},{{item.id}},{{index}},1)">一键下单</view>
          </view>
        </view>
      </orderList>
    </repeat>
    <!--商品分类显示  -->
    <view class='body-bg' bindtap='hiddenShopList' touchstart='hiddenbg' touchmove="hiddenbg" wx:if="{{ishowList}}">
      <view class='list'>
        <view style="color:red" @tap.stop="stop"> 选择工长</view>
        <view wx:for="{{friendList}}" wx:key="{{index}}" @tap='changeList({{item.user_id}},{{item.user_name}})'>
          {{item.user_name}}
        </view>
      </view>
    </view>
    <view class="backIndex3 " @tap='toCart'>
      <text class='iconfont icon-gouwuchekong'></text>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '../API/api';
import newapi from '../API/newapi';
import noorder from '../components/noOrder';
import orderList from '../components/shop/orderList';
export default class yizhanList extends wepy.page {
  config = {
    navigationBarTitleText: '进货记录'
  };
  components = {
    noorder,
    orderList
  };
  data = {
    orderList: [],
    goodsMap: [],
    friendList: [],
    ishowList: false,
    otherList: [],
    otherMap: []
  };
  computed = {};
  methods = {
    toCart() {
      wx.navigateTo({
        url: '/Shop/pages/shopCart'
      });
    },
    orderDetail(id) {
      wx.navigateTo({
        url: '/Shop/pages/orderDetail?id=' + id
      });
    },
    changeList(user_id) {
      this.$parent.globalData.friend_id = user_id;
      this.$parent.globalData.friend_suppliers_id = this.orderList[
        this.orderIndex
      ].suppliers_id;
      this.toShopCart(this.orderList[this.orderIndex].id);
    },
    hiddenShopList() {
      this.ishowList = false;
    },
    async toOrderAgain(suppliersId, orderId, index, type = 0) {
      this.orderIndex = index;
      if (type == 1) {
        this.toShopCart(orderId);
        return;
      }
      // 判断是否工长分享页面
      if (
        this.$parent.globalData.friend_suppliers_id &&
        this.$parent.globalData.friend_id
      ) {
        // 判断店铺是否相同
        if (this.$parent.globalData.friend_suppliers_id == suppliersId) {
          // 相同 =》直接下单
          this.toShopCart(orderId);
        } else {
          console.log('店铺id不相同', this.orderList[index].friend_id);
          // 判断店铺是否有friend_id
          if (this.orderList[index].friend_id == '0') {
            // 没有friend_id=>直接下单
            this.toShopCart(orderId);
          } else {
            //不相同=》提示是否切换
            // 选择friend_id=>下单
            var res = await wepy.showModal({
              title: '提示', //提示的标题,
              content: '你确定要.....', //提示的内容,
              showCancel: true, //是否显示取消按钮,
              cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
              cancelColor: '#000000', //取消按钮的文字颜色,
              confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
              confirmColor: '#e50012' //确定按钮的文字颜色,
            });
            if (res.confirm) {
              this.friendList = await this.getFriendList(
                suppliersId,
                this.userId
              );
              this.ishowList = true;
              this.$apply();
              console.log('工长列表', this.friendList);
            } else if (res.cancel) {
              console.log('用户点击取消');
              // 直接下单
              this.toShopCart(orderId);
            }
          }
        }
        // 不是来着工长分享页面
      } else {
        if (this.orderList[index].friend_id == '0') {
          // 没有friend_id=>直接下单
          this.toShopCart(orderId);
        } else {
          // 选择friend_id=>下单
          var res = await wepy.showModal({
            title: '提示', //提示的标题,
            content: '你确定要.....', //提示的内容,
            showCancel: true, //是否显示取消按钮,
            cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
            cancelColor: '#000000', //取消按钮的文字颜色,
            confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
            confirmColor: '#e50012' //确定按钮的文字颜色,
          });
          if (res.confirm) {
            this.friendList = await this.getFriendList(
              suppliersId,
              this.userId
            );
            this.ishowList = true;
            this.$apply();
            console.log('工长列表', this.friendList);
          } else if (res.cancel) {
            console.log('用户点击取消');
            // 直接下单
            this.toShopCart(orderId);
          }
        }
      }
      console.log('父组件再来一单', suppliersId, orderId);
    }
  };
  events = {};
  // 工长列表
  async getFriendList(suppliers_id, user_id) {
    wx.showLoading({
      title: '', //提示的内容,
      mask: true //显示透明蒙层，防止触摸穿透,
    });
    let data = {
      suppliers_id,
      user_id
    };
    var res = await newapi.friend_list(data);
    wx.hideLoading();
    if (res.data.code === '0') {
      return res.data.data;
    } else {
      wx.showToast({
        title: '获取工长列表失败', //提示的内容,
        icon: 'none' //图标,
      });
    }
  }
  async toShopCart(orderId) {
    var res = await wepy.showModal({
      title: '提示', //提示的标题,
      content: '你确定要加入购物车吗', //提示的内容,
      showCancel: true, //是否显示取消按钮,
      cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
      cancelColor: '#000000', //取消按钮的文字颜色,
      confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
      confirmColor: '#e50012' //确定按钮的文字颜色,
    });
    if (res.cancel) {
      return;
    }
    wx.showLoading({
      title: '加载中', //提示的内容,
      mask: true //显示透明蒙层，防止触摸穿透,
    });
    let data = {
      order_id: orderId,
      user_id: this.userId
    };
    var res = await newapi.zlyd(data);
    wx.hideLoading();
    if (res.data.code === '0') {
      wx.showToast({
        title: '加入购物车成功', //提示的内容,
        icon: 'none', //图标,
        duration: 2000, //延迟时间,
        mask: true, //显示透明蒙层，防止触摸穿透,
        success: res => {}
      });
    }
  }
  async getOtherList() {
    var friend_id = this.$parent.globalData.friend_id;
    if (friend_id && friend_id != '') {
      var suppliers_id = this.$parent.globalData.friend_suppliers_id;

      let data = {
        suppliers_id
      };
      var res = await newapi.tjdd(data);
      this.otherList = res.data.data.orderList;
      this.otherMap = res.data.data.goodsMap;
      this.$apply();
      wx.hideLoading();
    }
  }
  async getOrderList(userId, page = 1) {
    let data = {
      user_id: userId,
      order_status: 4,
      page
    };
    var res = await newapi.orderList(data);
    wx.hideLoading();
    var orderList = res.data.data.orderList;
    var goodsMap = res.data.data.goodsMap;
    if (page == 1) {
      this.orderList = orderList;
      this.goodsMap = goodsMap;
    } else {
      this.orderList.push(...orderList);
      this.goodsMap.push(...goodsMap);
    }
    if (orderList.length < 10) {
      this.isMoreData = false;
    }
    this.$apply();
    console.log('订单列表', this.orderList);
  }
  async onShow() {
    var userId = await this.$parent.loginInfo();
    this.isMoreData = true;
    this.page = 1;
    this.userId = userId;
    this.getOrderList(userId);
    this.getOtherList();
  }
  async onLoad() {
    wepy.showLoading({
      title: '加载中', //提示的内容,
      mask: true //显示透明蒙层，防止触摸穿透,
    });
  }
  onReachBottom() {
    if (this.isMoreData) {
      this.page = this.page + 1;
      this.getOrderList(this.userId, this.page);
    }
  }
}
</script>
